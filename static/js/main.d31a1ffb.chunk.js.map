{"version":3,"sources":["store/movie/movie.reducer.js","store/root-reducer.js","store/store.js","components/Header.jsx","components/SearchBar.jsx","utils/movieDB.js","components/MovieItem.jsx","components/Pagination.jsx","views/SearchPage.jsx","store/movie/movie.action.js","components/MovieDetail.jsx","views/MovieDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","movieList","genreList","movieReducer","state","action","type","payload","rootReducer","combineReducers","store","createStore","Header","className","to","SearchBar","handleSubmit","onSubmit","e","preventDefault","searchText","target","children","value","placeholder","MovieDB","BASE_URL","API_KEY","MovieItem","id","title","poster_path","overview","release_date","vote_average","src","alt","numeral","format","Pagination","props","current","keyword","total","pages","i","push","map","page","href","key","onClick","handleClick","connect","dispatch","getMovieList","list","useState","currentPag","setCurrentPag","totalPag","setTotalPag","setKeyword","val","axios","get","crossdomain","then","response","data","total_pages","results","catch","err","console","error","movie","MovieDetail","trailer","setTrailer","useEffect","a","item","getDetails","status","original_language","runtime","budget","revenue","genres","genre","name","frameBorder","allow","allowFullScreen","loading","setLoading","details","setDetails","match","params","App","exact","path","component","SearchPage","render","Boolean","window","location","hostname","history","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d31a1ffb.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n  movieList: [],\r\n  genreList: []\r\n};\r\n\r\nconst movieReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"GET_MOVIE_LIST\":\r\n      return {\r\n        ...state,\r\n        movieList: action.payload\r\n      };\r\n    case \"GET_ALL_GENRES\":\r\n      return {\r\n        ...state,\r\n        genreList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default movieReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport movieReducer from \"./movie/movie.reducer\";\r\n\r\nconst rootReducer = combineReducers({ movieReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">\r\n        <h1 className=\"header__title is-abel\">Movies</h1>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = ({ handleSubmit }) => {\r\n  // const handleSubmit = e => {\r\n  //   e.preventDefault();\r\n  // };\r\n\r\n  return (\r\n    <form\r\n      className=\"search__form\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        //Get the input value\r\n        const searchText = e.target.children[0].value;\r\n\r\n        handleSubmit(searchText, 1);\r\n      }}\r\n    >\r\n      <input\r\n        className=\"search__input is-abel\"\r\n        type=\"search\"\r\n        placeholder=\"Digite o nome do filme ou gÃªnero\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","class MovieDB {\r\n  static BASE_URL = \"https://api.themoviedb.org/3/\";\r\n  static API_KEY = \"api_key=3276fa51d16eb0a7c0fcb23665588bcd\";\r\n}\r\n\r\nexport default MovieDB;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport numeral from \"numeral\";\r\n\r\nconst MovieItem = ({\r\n  id,\r\n  title,\r\n  poster_path,\r\n  overview,\r\n  release_date,\r\n  vote_average\r\n}) => {\r\n  return (\r\n    <div className=\"movie__item\" id={id}>\r\n      <div className=\"movie__item-poster\">\r\n        <Link to={`/movie/${id}`}>\r\n          <img\r\n            src={\r\n              poster_path ? `http://image.tmdb.org/t/p/w200/${poster_path}` : \"\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"movie__item-content\">\r\n        <div className=\"header\">\r\n          <Link to={`/movie/${id}`}>\r\n            <h3 className=\"title is-abel\">{title}</h3>\r\n          </Link>\r\n          <span className=\"vote-average is-abel\">\r\n            <span className=\"value\">\r\n              {numeral(vote_average / 10).format(\"0 %\")}\r\n            </span>\r\n          </span>\r\n          <span className=\"release-date\">{release_date}</span>\r\n        </div>\r\n        <div className=\"content\">{overview}</div>\r\n        <div className=\"bottom\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\n\r\nconst Pagination = props => {\r\n  const { current, keyword, total } = props;\r\n  const pages = [];\r\n\r\n  const handleClick = page => {\r\n    props.handleClick(keyword, page);\r\n  };\r\n\r\n  for (var i = 1; i <= total; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page__wrapper\">\r\n      {pages.map(page => (\r\n        <a\r\n          className={current === page ? \"page__link active\" : \"page__link\"}\r\n          href={page}\r\n          key={page}\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            handleClick(page);\r\n          }}\r\n        >\r\n          {page}\r\n        </a>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport axios from \"axios\";\r\n\r\nimport { getMovieList } from \"../store/movie/movie.action\";\r\n\r\nimport MovieDB from \"../utils/movieDB\";\r\nimport MovieItem from \"../components/MovieItem\";\r\nimport Pagination from \"../components/Pagination\";\r\n\r\nconst SearchPage = ({ movieList, getMovieList }) => {\r\n  const [currentPag, setCurrentPag] = useState(\"\");\r\n  const [totalPag, setTotalPag] = useState(\"\");\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const handleSubmit = (val, page) => {\r\n    setKeyword(val);\r\n    axios\r\n      .get(\r\n        `${MovieDB.BASE_URL}search/movie?${MovieDB.API_KEY}&query=${val}&language=pt-BR&region=BR&page=${page}`,\r\n        { crossdomain: true }\r\n      )\r\n      .then(response => {\r\n        setCurrentPag(response.data.page);\r\n        setTotalPag(response.data.total_pages);\r\n        getMovieList([...response.data.results]);\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar handleSubmit={handleSubmit} />\r\n      {movieList.map(movie => (\r\n        <MovieItem key={movie.id} {...movie} />\r\n      ))}\r\n      <Pagination\r\n        current={currentPag}\r\n        keyword={keyword}\r\n        total={totalPag}\r\n        handleClick={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToPros = ({ movieReducer }) => ({\r\n  movieList: movieReducer.movieList\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getMovieList: list => dispatch(getMovieList(list))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToPros,\r\n  mapDispatchToProps\r\n)(SearchPage);\r\n","export const getMovieList = list => ({\r\n  type: \"GET_MOVIE_LIST\",\r\n  payload: list\r\n});\r\n\r\nexport const getAllGenres = list => ({\r\n  type: \"GET_ALL_GENRES\",\r\n  payload: list\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieDB from \"../utils/movieDB.js\";\r\nimport numeral from \"numeral\";\r\n\r\nconst MovieDetail = props => {\r\n  const [trailer, setTrailer] = useState({});\r\n\r\n  useEffect(() => {\r\n    //Get Movie trailer\r\n    const getDetails = async () => {\r\n      await axios\r\n        .get(`${MovieDB.BASE_URL}movie/${props.id}/videos?${MovieDB.API_KEY}`)\r\n        .then(({ data: { results } }) => {\r\n          results.map(item => {\r\n            if (item.type === \"Trailer\") {\r\n              setTrailer(item);\r\n            }\r\n            return null;\r\n          });\r\n        })\r\n        .catch(err => console.error(err));\r\n    };\r\n\r\n    getDetails();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div className=\"movie-detail__item\">\r\n      <div className=\"top\">\r\n        <h2 className=\"title is-abel\">{props.title}</h2>\r\n        <span className=\"date\">{props.release_date}</span>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"info\">\r\n          <h5 className=\"info__label\">Sinopse</h5>\r\n          <p className=\"info__overview\">{props.overview}</p>\r\n          <br />\r\n          <h5 className=\"info__label\">InformaÃ§Ãµes</h5>\r\n          <div className=\"info__wrapper\">\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">SituaÃ§Ã£o</h4>\r\n              <span className=\"value\">{props.status}</span>\r\n            </div>\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">Idioma</h4>\r\n              <span className=\"value\">{props.original_language}</span>\r\n            </div>\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">DuraÃ§Ã£o</h4>\r\n              <span className=\"value\">\r\n                {numeral(props.runtime).format(\"00:00:00\") + \" hr\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">OrÃ§amento</h4>\r\n              <span className=\"value\">\r\n                {numeral(props.budget).format(\"$0,0.00\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">Receita</h4>\r\n              <span className=\"value\">\r\n                {numeral(props.revenue).format(\"$0,0.00\")}\r\n              </span>\r\n            </div>\r\n            <div className=\"info__box\">\r\n              <h4 className=\"label\">Lucro</h4>\r\n              <span className=\"value\">\r\n                {numeral(props.revenue - props.budget).format(\"$0,0.00\")}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {/* Genres section */}\r\n          <ul className=\"genres\">\r\n            {props.genres\r\n              ? props.genres.map(genre => (\r\n                  <li key={genre.id} className=\"genre\">\r\n                    {genre.name}\r\n                  </li>\r\n                ))\r\n              : \"\"}\r\n          </ul>\r\n          <div className=\"info__average\">\r\n            <span className=\"value\">\r\n              {numeral(props.vote_average / 10).format(\"0%\")}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"poster\">\r\n          <img\r\n            src={\r\n              props.poster_path\r\n                ? `http://image.tmdb.org/t/p/w300/${props.poster_path}`\r\n                : \"\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <iframe\r\n          title={trailer.name}\r\n          src={`https://www.youtube.com/embed/${trailer.key}`}\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//DETAIL ITEM\r\nexport default MovieDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MovieDetailItem from \"../components/MovieDetail\";\r\nimport MovieDB from \"../utils/movieDB\";\r\nimport axios from \"axios\";\r\n\r\nconst MovieDetail = props => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [details, setDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\r\n        `${MovieDB.BASE_URL}movie/${props.match.params.id}?${MovieDB.API_KEY}&language=pt-BR`\r\n      )\r\n      .then(({ data }) => {\r\n        setLoading(false);\r\n        setDetails(data);\r\n      })\r\n      .catch(err => {\r\n        setLoading(true);\r\n        console.error(err);\r\n      });\r\n  }, [props]);\r\n\r\n  return (\r\n    <>{loading ? <h1>Carregando...</h1> : <MovieDetailItem {...details} />}</>\r\n  );\r\n};\r\n\r\n//DETAIL PAGE\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport SearchPage from \"./views/SearchPage\";\r\nimport MovieDetail from \"./views/MovieDetail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SearchPage} />\r\n          <Route path=\"/movie/:id\" component={MovieDetail} />\r\n          {/* 404 catch all / fallback */}\r\n          <Route path=\"*\" render={() => <Redirect to=\"/\" />} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport \"./assets/scss/styles.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}